name: Release
on:
  # Trigger the workflow on the new 'v*' tag created
  push:
    tags:
      - "v*"

  # also on manual trigger
  workflow_dispatch:
    inputs:
      release_version:
        description: 'The version number for the release'
        required: true

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: ubuntu-latest
          target: linux-amd64
        - os: ubuntu-24.04-arm
          target: linux-arm64
        - os: macos-13
          target: macos-x86_64
        - os: macos-14
          target: macos-arm64
        - os: windows-latest
          target: windows-x86_64
    steps:
      - uses: actions/checkout@v4

      - id: setup-haskell
        name: Set up Haskell
        uses: haskell-actions/setup@v2
        with:
          ghc-version: '9.8'

      - name: Freeze
        run: cabal freeze

      - name: Cache store
        uses: actions/cache@v4.2.0
        with:
          path: ${{ steps.setup-haskell.outputs.cabal-store }}
          key: ${{ runner.os }}-${{ hashFiles('cabal.project.freeze') }}

      - name: Build static binary
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          mkdir dist
          cabal install exe:hadolint \
          --install-method=copy\
          --overwrite-policy=always \
          --installdir=dist \
          --enable-executable-static
          --disable-executable-dynamic \
          --enable-executable-static \
          --disable-shared \
          --ghc-options="-fPIC"
      
      - name: Build regular binaries
        if: startsWith(matrix.os, 'macos') || startsWith(matrix.os, 'windows')
        run: |
          mkdir dist
          cabal install exe:hadolint \
          --install-method=copy\
          --overwrite-policy=always \
          --installdir=dist \
          --ghc-options="-fPIC"

      - id: build-opts
        name: Set binary path name
        run: |
          if [ "${{ runner.os }}" = 'windows-latest' ]; then
            echo "::set-output name=binary_path::./dist/hadolint.exe"
          else
            echo "::set-output name=binary_path::./dist/hadolint"
          fi
          echo "::set-output name=binary_os::${{ runner.os }}"
          echo "::set-output name=arch::${{ matrix.target }}"

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: hadolint-${{ steps.build-opts.outputs.binary_os }}-${{ steps.build-opts.outputs.arch }}
          path: ${{ steps.build-opts.outputs.binary_path }}
          retention-days: 3

  docker:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: ["amd64", "arm64"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: hadolint-Linux-${{matrix.target}}
          path: ${{matrix.target}}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_IO_REGISTRY_TOKEN }}

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker Image Scratch
        uses: docker/build-push-action@v4
        with:
          context: ${{matrix.target}}
          file: docker/Dockerfile
          platforms: linux/${{matrix.target}}
          target: base
          push: true
          tags: |
            ghcr.io/hadolint/hadolint:${{github.sha}}-${{matrix.target}}
            hadolint/hadolint:${{github.sha}}-${{matrix.target}}

      - name: Push Docker Image Debian
        uses: docker/build-push-action@v4
        with:
          context: ${{matrix.target}}
          file: docker/Dockerfile
          platforms: linux/${{matrix.target}}
          target: debian
          push: true
          tags: |
            ghcr.io/hadolint/hadolint:${{github.sha}}-debian-${{matrix.target}}
            hadolint/hadolint:${{github.sha}}-debian-${{matrix.target}}

      - name: Push Docker Image Alpine
        uses: docker/build-push-action@v4
        with:
          context: ${{matrix.target}}
          file: docker/Dockerfile
          platforms: linux/${{matrix.target}}
          target: alpine
          push: true
          tags: |
            ghcr.io/hadolint/hadolint:${{github.sha}}-alpine-${{matrix.target}}
            hadolint/hadolint:${{github.sha}}-alpine-${{matrix.target}}

  docker-release:
    if: github.event_name != 'workflow_dispatch'
    needs: docker
    runs-on: ubuntu-latest
    strategy:
      matrix:
        distro: ["scratch", "alpine", "debian"]
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_IO_REGISTRY_TOKEN }}

      - name: Set target and tag
        id: build-opts
        run: |
          if [ "${{ matrix.distro }}" = 'scratch' ]; then
            echo ::set-output name=target::${{github.sha}}
            echo ::set-output name=latest::latest
            echo ::set-output name=tag::"${GITHUB_REF/refs\/tags\/v/}"
          else
            echo ::set-output name=target::${{github.sha}}-${{matrix.distro}}
            echo ::set-output name=latest::"latest-${{ matrix.distro }}"
            echo ::set-output name=tag::"${GITHUB_REF/refs\/tags\/v/}-${{ matrix.distro }}"
          fi

      - name: Push Docker Images
        run: |
          docker pull ghcr.io/hadolint/hadolint:${{ steps.build-opts.outputs.target }}-amd64
          docker pull ghcr.io/hadolint/hadolint:${{ steps.build-opts.outputs.target }}-arm64
          docker pull hadolint/hadolint:${{ steps.build-opts.outputs.target }}-amd64
          docker pull hadolint/hadolint:${{ steps.build-opts.outputs.target }}-arm64

          docker manifest create \
            ghcr.io/hadolint/hadolint:${{ steps.build-opts.outputs.latest }} \
            ghcr.io/hadolint/hadolint:${{ steps.build-opts.outputs.target }}-amd64 \
            ghcr.io/hadolint/hadolint:${{ steps.build-opts.outputs.target }}-arm64
          docker manifest push ghcr.io/hadolint/hadolint:${{ steps.build-opts.outputs.latest }}
          docker manifest create \
            hadolint/hadolint:${{ steps.build-opts.outputs.latest }} \
            hadolint/hadolint:${{ steps.build-opts.outputs.target }}-amd64 \
            hadolint/hadolint:${{ steps.build-opts.outputs.target }}-arm64
          docker manifest push hadolint/hadolint:${{ steps.build-opts.outputs.latest }}

          docker manifest create \
            ghcr.io/hadolint/hadolint:${{ steps.build-opts.outputs.tag }} \
            ghcr.io/hadolint/hadolint:${{ steps.build-opts.outputs.target }}-amd64 \
            ghcr.io/hadolint/hadolint:${{ steps.build-opts.outputs.target }}-arm64
          docker manifest push ghcr.io/hadolint/hadolint:${{ steps.build-opts.outputs.tag }}
          docker manifest create \
            hadolint/hadolint:${{ steps.build-opts.outputs.tag }} \
            hadolint/hadolint:${{ steps.build-opts.outputs.target }}-amd64 \
            hadolint/hadolint:${{ steps.build-opts.outputs.target }}-arm64
          docker manifest push hadolint/hadolint:${{ steps.build-opts.outputs.tag }}

          docker manifest create \
            ghcr.io/hadolint/hadolint:v${{ steps.build-opts.outputs.tag }} \
            ghcr.io/hadolint/hadolint:${{ steps.build-opts.outputs.target }}-amd64 \
            ghcr.io/hadolint/hadolint:${{ steps.build-opts.outputs.target }}-arm64
          docker manifest push ghcr.io/hadolint/hadolint:v${{ steps.build-opts.outputs.tag }}
          docker manifest create \
            hadolint/hadolint:v${{ steps.build-opts.outputs.tag }} \
            hadolint/hadolint:${{ steps.build-opts.outputs.target }}-amd64 \
            hadolint/hadolint:${{ steps.build-opts.outputs.target }}-arm64
          docker manifest push hadolint/hadolint:v${{ steps.build-opts.outputs.tag }}

  release:
    if: github.event_name != 'workflow_dispatch'
    needs: [docker-release, build]
    name: Create GitHub Release
    runs-on: ubuntu-latest
    steps:

    - name: Check out
      uses: actions/checkout@v4

    - name: Download Linux x86
      uses: actions/download-artifact@v4
      with:
        name: hadolint-Linux-amd64
        path: artifacts/hadolint-Linux-x86_64

    - name: Download Linux arm64
      uses: actions/download-artifact@v4
      with:
        name: hadolint-Linux-arm64
        path: artifacts/hadolint-Linux-arm64

    - name: Download Macos x86
      uses: actions/download-artifact@v4
      with:
        name: hadolint-Darwin-x86_64
        path: artifacts/hadolint-Darwin-x86_64

    - name: Download Macos arm
      uses: actions/download-artifact@v4
      with:
        name: hadolint-Darwin-arm64
        path: artifacts/hadolint-Darwin-arm64

    - name: Download Windows x86
      uses: actions/download-artifact@v4
      with:
        name: hadolint-Windows-x86_64.exe
        path: artifacts/hadolint-Windows-x86_64.exe

    - name: Rename and Checksum
      run: |
        mv artifacts/hadolint-Linux-x86_64/hadolint hadolint-Linux-x86_64
        mv artifacts/hadolint-Linux-arm64/hadolint hadolint-Linux-arm64
        mv artifacts/hadolint-Darwin-x86_64/hadolint hadolint-Darwin-x86_64
        mv artifacts/hadolint-Darwin-arm64/hadolint hadolint-Darwin-arm64
        mv artifacts/hadolint-Windows-x86_64.exe/hadolint.exe hadolint-Windows-x86_64.exe

        sha256sum -b hadolint-Linux-x86_64 > hadolint-Linux-x86_64.sha256
        sha256sum -b hadolint-Linux-arm64 > hadolint-Linux-arm64.sha256
        sha256sum -b hadolint-Darwin-x86_64 > hadolint-Darwin-x86_64.sha256
        sha256sum -b hadolint-Darwin-arm64 > hadolint-Darwin-arm64.sha256
        sha256sum -b hadolint-Windows-x86_64.exe > hadolint-Windows-x86_64.exe.sha256

    - name: Release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        generate_release_notes: true
        fail_on_unmatched_files: true
        files: |
          hadolint-Linux-x86_64
          hadolint-Linux-x86_64.sha256
          hadolint-Linux-arm64
          hadolint-Linux-arm64.sha256
          hadolint-Darwin-x86_64
          hadolint-Darwin-x86_64.sha256
          hadolint-Darwin-arm64
          hadolint-Darwin-arm64.sha256
          hadolint-Windows-x86_64.exe
          hadolint-Windows-x86_64.exe.sha256
